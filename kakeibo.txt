Sub Button1()
    Dim rakutenCSVPath As String
    Dim rakutenCSVBook As Workbook
    
    
    rakutenCSVPath = FileChoose
    
    Dim oldSheet As Worksheet
    If SheetExists("CSV取込") Then
        Set oldSheet = ThisWorkbook.Sheets("CSV取込")
        Application.DisplayAlerts = False
        oldSheet.Delete
        Application.DisplayAlerts = True
    End If
    
    If SheetExists("result") Then
        Set oldSheet = ThisWorkbook.Sheets("result")
        Application.DisplayAlerts = False
        oldSheet.Delete
        Application.DisplayAlerts = True
    End If
    
    
    ' 新しいシートを作成（最後尾に追加）
    Dim newSheet As Worksheet
    Set newSheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
    newSheet.Name = "CSV取込"
    
        ' 一時的にCSVを開く
    Set rakutenCSVBook = Workbooks.Open(Filename:=rakutenCSVPath)
    
        ' データをコピー
    rakutenCSVBook.Sheets(1).UsedRange.Copy
    
    ' 現在のブックのシートに貼り付け
    newSheet.Range("A1").PasteSpecial xlPasteValues
    
    Application.CutCopyMode = False
    
        ' CSVブックを閉じる（保存しない）
    rakutenCSVBook.Close SaveChanges:=False

    Application.CutCopyMode = False
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    ' 設定シートの店名で、csv取り込みシートの利用店名を検索し、ヒットした行の利用額を合計して、resultシートに書き込む
    ' 設定シートのカテゴリをkeyに、店名の配列をvalueにしたdictを作成
    Dim dict As Object
    Set dict = GetCategoryDict()
    
    Dim resultDict As Object
    Set resultDict = CreateObject("Scripting.Dictionary")
    
    Dim targetValues As Collection ' CSVデータの店名列(B列)
    Set targetValues = GetTargetValues(newSheet)
    
    Dim k As Variant
    Dim i As Long
    Dim j As Long
    Dim lastRow As Long
    Dim col As Collection
    lastRow = newSheet.Cells(newSheet.Rows.Count, "B").End(xlUp).Row
    i = 2
    
    Dim amount As Long
    Dim isExists As Boolean
    Dim notExistsCol As Collection
    Set notExistsCol = New Collection
    For Each targetValue In targetValues
        isExists = False
        For Each k In dict.Keys
            amount = 0
            Set col = dict(k)
            For j = 1 To col.Count
                If InStr(targetValue, col(j)) > 0 Then
                    ' Debug.Assert col(j) <> "ﾊﾟﾊﾟｽ"
                    
                    amount = amount + newSheet.Cells(i, 7).Value
                    isExists = True
                End If
            Next j
            If resultDict.Exists(k) Then
                resultDict(k) = resultDict(k) + amount

            Else
                resultDict.Add k, amount
            End If
            
        Next
        If isExists = Fase Then
            notExistsCol.Add targetValue
        End If
        i = i + 1
    Next
    
    For Each totalKey In resultDict.Keys
        Debug.Print totalKey
        Debug.Print resultDict(totalKey)
    Next
    
    Call OutputResult(resultDict, dict)

End Sub

Function GetTargetValues(newSheet As Worksheet) As Collection
    Dim targetValue As Variant
    Dim i As Long
    Dim lastRow As Long
    lastRow = newSheet.Cells(newSheet.Rows.Count, "B").End(xlUp).Row
    Dim targetValues As Collection
    Set targetValues = New Collection
    For i = 2 To lastRow
        targetValue = newSheet.Cells(i, 2).Value ' TODO targetValue(newSheetの2列目)を配列で取得
        targetValues.Add targetValue
    Next i
    Set GetTargetValues = targetValues
End Function

Function OutputResult(resultDict As Object, categoryDict As Object)
    ' resultシートの作成
    Dim result As Worksheet
    Set result = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
    result.Name = "result"
    ' resultヘッダーの作成
    result.Cells(1, 1).Value = "カテゴリ"
    result.Cells(1, 2).Value = "店名"
    result.Cells(1, 3).Value = "合計金額"
    
    Dim i As Long
    Dim col As Collection
    Set col = New Collection
    Dim shops As String

    i = 2 ' resultのヘッダーの次の行
    Dim k As Variant
    For Each k In resultDict.Keys
        shops = ""
        result.Cells(i, 1).Value = k
        result.Cells(i, 2).Value = resultDict(k)
        Set col = categoryDict(k)
        
        For Each e In col
            shops = shops + e + ", "
        Next
        result.Cells(i, 3).Value = shops
        i = i + 1
    Next
End Function

Function GetCategoryDict() As Object
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("家計簿設定シート") ' シート名を指定
    Dim dict As Object
    Set dict = CreateObject("Scripting.Dictionary")
    Dim i As Long
    Dim lastRow As Long
    Dim categoryValue As Variant
    Dim nameValue As Variant
    lastRow = ws.Cells(ws.Rows.Count, "C").End(xlUp).Row
    For i = 3 To lastRow
        
        categoryValue = ws.Cells(i, "C").Value
        nameValue = ws.Cells(i, "B").Value
        ' キーの存在チェック
        If dict.Exists(categoryValue) Then
            dict(categoryValue).Add (nameValue)
        Else
            Dim col As Collection
            Set col = New Collection
            col.Add nameValue
            dict.Add categoryValue, col
        End If
    Next i
    Set GetCategoryDict = dict
End Function

Function FileChoose() As String
    Dim filePath As String
    
    ' ファイル選択ダイアログを表示
    With Application.FileDialog(msoFileDialogFilePicker)
        .Title = "ファイルを選択してください"
        .Filters.Clear
        .Filters.Add "すべてのファイル", "*.*"
        .AllowMultiSelect = False
        
        If .Show = -1 Then
            filePath = .SelectedItems(1)
            FileChoose = filePath
        Else
            MsgBox "ファイルの選択がキャンセルされました"
        End If
    End With
End Function

Sub PrintCategory()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim lastRow As Long
    
    Set ws = ThisWorkbook.Sheets("家計簿設定シート")
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
    Dim targetValue As Variant
    
    For i = 3 To lastRow
        targetValue = ws.Cells(i, "B").Value
        
        ' targetValueをD3:H5の範囲で検索し、ヒットした列のヘッダー名を取得
        Dim categoryValue As Variant
        categoryValue = GetHeader(targetValue)
        ws.Cells(i, "C").Value = categoryValue
        
    Next i
End Sub

Function GetHeader(targetValue As Variant)
    Set ws = ThisWorkbook.Sheets("家計簿設定シート")
    Dim lastRow As Long
    lastRow = 30
    Dim lastColumn As Long
    lastColumn = ws.Cells(3, ws.Columns.Count).End(xlToLeft).column
    Dim categoryStartColumn As Long
    categoryStartColumn = 5
    Dim cellValue As Variant
    
    
    For i = categoryStartColumn To lastColumn
        For j = 3 To lastRow
            cellValue = ws.Cells(j, i).Value
            If cellValue = targetValue Then
                GetHeader = ws.Cells(2, i)
            End If
        Next j
    Next i
End Function

Function SheetExists(sName As String) As Boolean
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets(sName)
    On Error GoTo 0
    SheetExists = Not ws Is Nothing
End Function

